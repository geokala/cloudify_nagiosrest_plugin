tosca_definitions_version: cloudify_dsl_1_3

description: >
  The blueprint describes an OpenStack vm created using Cloudify's OpenStack plugin
  and simple web server started using Cloudify's script plugin.
  In addition, an OpenStack floating ip and security group are created and associated with the created vm.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3.dev1/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/2.0.1/plugin.yaml
  - plugin:cloudify-nagiosrest-plugin

inputs:
  image:
    description: >
      A centos 7 image available to the openstack user you set in secrets.

  flavor:
    description: >
      A flavor large enough for the centos 7 image to run on.

  agent_user:
    description: The user name of the agent on the instance created from the image.
    default: centos

  management_network_name:
    description: Which network to attach this VM to.

  key_name:
    description: The name of the key on openstack.


dsl_definitions:
  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }


node_types:
  monitoredvm:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      nagiosrest_monitoring:
        type: cloudify.datatypes.nagiosrest.Properties
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install: scripts/snmpv2c_install
      cloudify.interfaces.monitoring:
        start: nagiosrest.nagiosrest_plugin.tasks.add_monitoring
        stop: nagiosrest.nagiosrest_plugin.tasks.remove_monitoring


node_templates:
  snmpv2c_test_host:
    type: monitoredvm
    instances:
      deploy: 2
    properties:
      agent_config:
        user: { get_input: agent_user }
        install_method: remote
        port: 22
        key: { get_secret: agent_key_private }
      server:
        key_name: ''
        image: { get_input: image }
        flavor: { get_input: flavor }
        key_name: { get_input: key_name }
      openstack_config: *openstack_config
      management_network_name: { get_input: management_network_name }
      nagiosrest_monitoring:
        target_type: vnf_fake_type_2
